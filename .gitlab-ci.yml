image : mcr.microsoft.com/dotnet/sdk:latest
stages:
  - deploy
Deploy-Job:
  stage: deploy
  script:
    - npm install
    - ($env:CI = "false") -and (npm run build)
    - $date = get-date -format  "dd-MM-yyyy"
    - mkdir -p "E:\Station\Versions\Station.$date.$Env:VersionStation\"
    - Import-Module WebAdministration
    - Set-ItemProperty IIS:\Sites\Station -name physicalPath -value "E:\Station\Versions\Station.$date.$Env:VersionStation\"
    #- Remove-Item "E:\Station\*" -Recurse
    - Copy-item -Force -Recurse -Verbose "E:\GitLab-Runner\builds\JQ2tbnAm\0\ui\OnlineStationUI\build\*" -Destination  "E:\Station\Versions\Station.$date.$Env:VersionStation\"
    - Stop-WebSite "Station"
    - Start-WebSite "Station"
    - ([Environment]::SetEnvironmentVariable("VersionStation", [int64]$Env:VersionStation + 1, "Machine"))
    - cd c:\scripts\Station\
    - .\only4backup
  tags:
    - Test
  artifacts:
  rules:
    - if: $CI_COMMIT_BRANCH == "Develop"
stage-Job:
  stage: deploy
  script:
    - npm install 
    - ($env:CI = "false") -and (npm run build)
    - $date = get-date -format  "dd-MM-yyyy"
    - mkdir -p "D:\Stage\UI\StationUI\Versions\Station.$date.$Env:VersionStation\"
    - Import-Module WebAdministration
    - Set-ItemProperty IIS:\Sites\StationUI -name physicalPath -value "D:\Stage\UI\StationUI\Versions\Station.$date.$Env:VersionStation\"
    #- Remove-Item "E:\Station\*" -Recurse
    - Copy-item -Force -Recurse -Verbose "D:/GitLab-Runner/builds/pyWXt8_4/0/ui/OnlineStationUI\build\*" -Destination  "D:\Stage\UI\StationUI\Versions\Station.$date.$Env:VersionStation\"
    - Stop-WebSite "StationUI"
    - Start-WebSite "StationUI"
    - ([Environment]::SetEnvironmentVariable("VersionStation", [int64]$Env:VersionStation + 1, "Machine"))
    - cd c:\scripts\StationUI\
    - .\only4backup
  tags:
    - StageApp
  artifacts:
  rules:
    - if: $CI_COMMIT_BRANCH == "Stage"
Preprd-Job01:
  stage: deploy
  script:
    - npm install
    - ($env:CI = "false") -and (npm run build)
    - $date = get-date -format  "dd-MM-yyyy"
    - mkdir -p "D:\UI\Farabi\OnlineStaition\Versions\Station.$date.$Env:AdminApiS\"
    - Stop-Service -Name "Uionlinestaition"
    - Copy-item -Force -Recurse -Verbose "D:\GitLab-Runner\builds\PceAeq_r\0\ui\OnlineStationUI\build\*" -Destination  "D:\UI\Farabi\OnlineStaition\Versions\Station.$date.$Env:AdminApiS\"
    - sc.exe config Uionlinestaition binpath="D:\RamandStaticFileHosting\RamandStaticFileHosting.exe -p6038 -aD:\UI\Farabi\OnlineStaition\Versions\Station.$date.$Env:AdminApiS\"
    - Start-Service -Name "Uionlinestaition" 
    - ([Environment]::SetEnvironmentVariable("AdminApiS", [int64]$Env:AdminApiS + 1, "Machine"))
    #- cd c:\scripts\StationUI\
    #- .\only4backup
  tags:
    - Srv-Preprd
  artifacts:
  rules:
    - if: $CI_COMMIT_BRANCH == "Preprd"
Production-Job01:
  stage: deploy
  script:
    - npm install
    - ($env:CI = "false") -and (npm run build)
    - $date = get-date -format  "dd-MM-yyyy"
    - mkdir -p "D:\UI\Farabi\OnlineStaition\Versions\Station.$date.$Env:VersionRlcDataApi\"
    - Stop-Service -Name "Uionlinestaition"
    - Copy-item -Force -Recurse -Verbose "D:\GitLab-Runner\builds\Ka-RHRf8\0\ui\OnlineStationUI\build\*" -Destination  "D:\UI\Farabi\OnlineStaition\Versions\Station.$date.$Env:VersionRlcDataApi\"
    - sc.exe config Uionlinestaition binpath="D:\RamandStaticFileHosting\RamandStaticFileHosting.exe -p6030 -aD:\UI\Farabi\OnlineStaition\Versions\Station.$date.$Env:VersionRlcDataApi\"
    - Start-Service -Name "Uionlinestaition" 
    - ([Environment]::SetEnvironmentVariable("VersionRlcDataApi", [int64]$Env:VersionRlcDataApi + 1, "Machine"))
    - cd c:\scripts\StationUI\
    - .\only4backup
  tags:
    - Web01
  artifacts:
  rules:
    - if: $CI_COMMIT_BRANCH == "Production"
Production-Job02:
  stage: deploy
  script:
    - $date = get-date -format  "dd-MM-yyyy"
    - Start-Sleep -Seconds 360
    - mkdir -p "D:\UI\Farabi\OnlineStaition\Versions\Station.$date.$Env:VersionRlcDataApi\"
    - $User = "RAMANDTECH\copycicd"
    - $PWord = ConvertTo-SecureString -String "CiCd@123456789" -AsPlainText -Force
    - $Credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $User, $PWord 
    - $MYSESSION = New-PSSession -ComputerName "Srv-WebApi01" -Credential $Credential
    - Stop-Service -Name "Uionlinestaition"
    - Copy-item -Force -Recurse -Verbose -FromSession $MYSESSION -Path D:\GitLab-Runner\builds\Ka-RHRf8\0\ui\OnlineStationUI\build\* -Destination  D:\UI\Farabi\OnlineStaition\Versions\Station.$date.$Env:VersionRlcDataApi\
    - sc.exe config Uionlinestaition binpath="D:\RamandStaticFileHosting\RamandStaticFileHosting.exe -p6030 -aD:\UI\Farabi\OnlineStaition\Versions\Station.$date.$Env:VersionRlcDataApi\"
    - Start-Service -Name "Uionlinestaition" 
    - ([Environment]::SetEnvironmentVariable("VersionRlcDataApi", [int64]$Env:VersionRlcDataApi + 1, "Machine"))
    - cd c:\scripts\StationUI\
    - .\only4backup
  tags:
    - Web02
  artifacts:
  rules:
    - if: $CI_COMMIT_BRANCH == "Production"
Dr-Srv-Job01:
  stage: deploy
  script:
    - npm install
    - ($env:CI = "false") -and (npm run build)
    - $date = get-date -format  "dd-MM-yyyy"
    - mkdir -p "D:\UI\Farabi\OnlineStaition\Versions\Station.$date.$Env:VersionRlcDataApi\"
    - Stop-Service -Name "Uionlinestaition"
    - Copy-item -Force -Recurse -Verbose "D:\GitLab-Runner\builds\v4pe4pNy\0\ui\OnlineStationUI\build\*" -Destination  "D:\UI\Farabi\OnlineStaition\Versions\Station.$date.$Env:VersionRlcDataApi\"
    - sc.exe config Uionlinestaition binpath="D:\RamandStaticFileHosting\RamandStaticFileHosting.exe -p6034 -aD:\UI\Farabi\OnlineStaition\Versions\Station.$date.$Env:VersionRlcDataApi\"
    - Start-Service -Name "Uionlinestaition" 
    - ([Environment]::SetEnvironmentVariable("VersionRlcDataApi", [int64]$Env:VersionRlcDataApi + 1, "Machine"))
    #- cd c:\scripts\StationUI\
    #- .\only4backup
  tags:
    - DR-Web01
  artifacts:
  rules:
    - if: $CI_COMMIT_BRANCH == "Production"