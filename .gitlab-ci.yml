image : mcr.microsoft.com/dotnet/sdk:latest
stages:
  - deploy
Deploy-Job:
  stage: deploy
  script:
    - npm install
    - ($env:CI = "false") -and (npm run build)
    - $date = get-date -format  "dd-MM-yyyy"
    - mkdir -p "E:\Station\Versions\Station.$date.$Env:VersionStation\"
    - Import-Module WebAdministration
    - Set-ItemProperty IIS:\Sites\Station -name physicalPath -value "E:\Station\Versions\Station.$date.$Env:VersionStation\"
    #- Remove-Item "E:\Station\*" -Recurse
    - Copy-item -Force -Recurse -Verbose "E:\GitLab-Runner\builds\JQ2tbnAm\0\ui\OnlineStationUI\build\*" -Destination  "E:\Station\Versions\Station.$date.$Env:VersionStation\"
    - Stop-WebSite "Station"
    - Start-WebSite "Station"
    - ([Environment]::SetEnvironmentVariable("VersionStation", [int64]$Env:VersionStation + 1, "Machine"))
    - cd c:\scripts\Station\
    - .\only4backup
  tags:
    - Test
  artifacts:
  rules:
    - if: $CI_COMMIT_BRANCH == "Develop"
stage-Job:
  stage: deploy
  script:
    - npm install
    - ($env:CI = "false") -and (npm run build)
    - $date = get-date -format  "dd-MM-yyyy"
    - mkdir -p "D:\Stage\UI\StationUI\Versions\Station.$date.$Env:VersionStation\"
    - Import-Module WebAdministration
    - Set-ItemProperty IIS:\Sites\StationUI -name physicalPath -value "D:\Stage\UI\StationUI\Versions\Station.$date.$Env:VersionStation\"
    #- Remove-Item "E:\Station\*" -Recurse
    - Copy-item -Force -Recurse -Verbose "D:\GitLab-Runner\builds\pyWXt8_4\0\ui\StationUI\build\*" -Destination  "D:\Stage\UI\StationUI\Versions\Station.$date.$Env:VersionStation\"
    - Stop-WebSite "StationUI"
    - Start-WebSite "StationUI"
    - ([Environment]::SetEnvironmentVariable("VersionStation", [int64]$Env:VersionStation + 1, "Machine"))
   # - cd c:\scripts\StationUI\
   # - .\only4backup
  tags:
    - StageApp
  artifacts:
  rules:
    - if: $CI_COMMIT_BRANCH == "Stage"